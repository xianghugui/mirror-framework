<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.base.web.dao.user.UserMapper">
    <resultMap id="UserResultMap" type="com.base.web.bean.po.user.User">
        <id property="id" column="u_id" javaType="Long" jdbcType="BIGINT"/>
        <result property="username" column="username" javaType="String" jdbcType="VARCHAR"/>
        <result property="password" column="password" javaType="String" jdbcType="VARCHAR"/>
        <result property="name" column="name" javaType="String" jdbcType="VARCHAR"/>
        <result property="email" column="email" javaType="String" jdbcType="VARCHAR"/>
        <result property="creator" column="creator" javaType="Long" jdbcType="BIGINT"/>
        <result property="phone" column="phone" javaType="String" jdbcType="VARCHAR"/>
        <result property="status" column="status" javaType="int" jdbcType="INTEGER"/>
        <result property="createDate" column="create_date" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="updateDate" column="update_date" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <collection property="userRoles" column="u_id" ofType="com.base.web.bean.po.role.UserRole"
                    select="com.base.web.dao.role.UserRoleMapper.selectByUserId"/>
    </resultMap>
    <!--用于动态生成sql所需的配置-->
    <sql id="config">
        <bind name="resultMapId" value="'UserResultMap'"/>
        <bind name="tableName" value="'s_user'"/>
    </sql>

    <insert id="insert" parameterType="com.base.web.bean.common.InsertParam" >
        <include refid="config"/>
        <include refid="BasicMapper.buildInsertSql"/>
    </insert>

    <delete id="delete" parameterType="com.base.web.bean.common.DeleteParam">
        <include refid="config"/>
        <include refid="BasicMapper.buildDeleteSql"/>
    </delete>

    <delete id="deleteUser" parameterType="Long">
        delete from s_user where u_id = #{id}
    </delete>

    <update id="updatePassword" parameterType="com.base.web.bean.po.user.User">
        update s_user set password=#{password,jdbcType=VARCHAR} where u_id = #{id}
    </update>

    <update id="update" parameterType="com.base.web.bean.common.UpdateParam">
        <include refid="config"/>
        <include refid="BasicMapper.buildUpdateSql"/>
    </update>

    <select id="selectByUserName" parameterType="string" resultMap="UserResultMap">
        select * from s_user where username=#{username}
    </select>

    <select id="selectByPk" parameterType="Long" resultMap="UserResultMap">
        select * from s_user where u_id=#{u_id}
    </select>

    <select id="select" parameterType="com.base.web.bean.common.QueryParam" resultMap="UserResultMap">
        <include refid="config"/>
        <include refid="BasicMapper.buildSelectSql"/>
    </select>

    <select id="total" parameterType="com.base.web.bean.common.QueryParam" resultType="int">
        <include refid="config"/>
        <include refid="BasicMapper.buildTotalSql"/>
    </select>
    <select id="addBrandUser" parameterType="String" resultType="java.util.HashMap">
        SELECT
        tu.u_id AS uId,
        tu.`name`,
        tu.phone
        FROM
        s_user tu,s_user_role sur
        WHERE
        sur.role_id = 10014 AND tu.u_id = sur.user_id
        AND tu.`status` = 1
        AND tu.u_id NOT IN
        ( SELECT  IFNULL(tbr.user_id,0) user_id  FROM t_brand tbr
        WHERE tbr.user_id != #{userId} )
    </select>
    <select id="allNoBelongBrandUser" resultType="java.util.HashMap">
        SELECT
        tu.u_id AS uId,
        tu.`name`,
        tu.phone
        FROM
        s_user tu,s_user_role sur
        WHERE
        sur.role_id = 10014 AND tu.u_id = sur.user_id
        AND tu.`status` = 1
        AND tu.u_id NOT IN
        ( SELECT  IFNULL(user_id,0) user_id  FROM t_brand  )
    </select>
</mapper>
